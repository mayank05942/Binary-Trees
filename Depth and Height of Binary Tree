Height of node â€“ The height of a node is the number of edges on the longest downward path between that node and a leaf.
_______________

Height of a Tree:  the height of a tree is the height of its root.
________________

Properties:
------------

When looking at height:

Every node has height.

Leaf cannot have height as there will be no path starting from a leaf.

It is the longest path from the node to a leaf.

The height of the root is 1.

Code:
-------------------------------------------------------------------------------------------------------------------------------

class Solution:

    def maxDepth(self, root: TreeNode) -> int:
        if root is None:
            return -1                              # Note since leaf cannot have any height
            
        left_tree = self.maxDepth(root.left)
        right_tree = self.maxDepth(root.right)
        
        return 1 + max(left_tree,right_tree)
____________________________________________________________________________________________________________________________________

Depth of a Node:
-----------------
The depth of a node is the number of edges from the node to the tree's root node.

We don't care about path any more when depth pops in. 
We just count how many edges between the targeting node and the root, ignoring directions. 

the depth of the root is 0

Code:

class Solution:

    def maxDepth(self, root: TreeNode) -> int:
        if root is None:
            return 0                              # only difference
            
        left_tree = self.maxDepth(root.left)
        right_tree = self.maxDepth(root.right)
        
        return 1 + max(left_tree,right_tree)













